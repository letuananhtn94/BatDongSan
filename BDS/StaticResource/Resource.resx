<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenied" xml:space="preserve">
    <value>Truy cập bị từ chối.</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Tài khoản</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Hành động</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Địa chỉ</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tất cả</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Quay lại danh sách</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Hủy bỏ</value>
  </data>
  <data name="CannotInsertData" xml:space="preserve">
    <value>Không thể thêm dữ liệu. Vui lòng kiểm tra lại thông tin!</value>
  </data>
  <data name="Car" xml:space="preserve">
    <value>Xe khách</value>
  </data>
  <data name="ChannelDetail" xml:space="preserve">
    <value>Chi tiết tuyến</value>
  </data>
  <data name="CMND" xml:space="preserve">
    <value>CMND</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Xác nhận mật khẩu</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Tạo mới</value>
  </data>
  <data name="DateTimeFormat" xml:space="preserve">
    <value>HH:mm dd/MM/yyyy</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Bạn muốn xóa?</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Chi tiết</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Sửa</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EntityNotExist" xml:space="preserve">
    <value>Dữ liệu không tồn tại</value>
  </data>
  <data name="ExistForeignKeyError" xml:space="preserve">
    <value>Không thể xóa dữ liệu đang được sử dụng. </value>
  </data>
  <data name="ExistingNameOfError" xml:space="preserve">
    <value>Tên {0} này đã tồn tại.</value>
  </data>
  <data name="ExistingOfError" xml:space="preserve">
    <value>{0} đã tồn tại</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Họ và tên</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Mã</value>
  </data>
  <data name="InputSpecialCharacter" xml:space="preserve">
    <value>Trường {0} không được chứa ký tự đặc biệt</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Trường {0} nhập không đúng định dạng</value>
  </data>
  <data name="ListOf" xml:space="preserve">
    <value>Danh sách {0}</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Đăng nhập</value>
  </data>
  <data name="LoginFailedMessage" xml:space="preserve">
    <value>Tài khoản và mật khẩu không đúng</value>
  </data>
  <data name="NameOf" xml:space="preserve">
    <value>Tên {0}</value>
  </data>
  <data name="PaginationTxt" xml:space="preserve">
    <value>Trang {0} trong {1}</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mật khẩu</value>
  </data>
  <data name="PasswordNotMatch" xml:space="preserve">
    <value>Mật khẩu không trùng khớp</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>SĐT</value>
  </data>
  <data name="RequiredError" xml:space="preserve">
    <value>Trường "{0}" là bắt buộc</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Quyền</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Lưu lại</value>
  </data>
  <data name="SaveAndContinueEdit" xml:space="preserve">
    <value>Lưu và tiếp tục chỉnh sửa</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Tìm kiếm</value>
  </data>
  <data name="SearchBy" xml:space="preserve">
    <value>Tìm kiếm theo {0}</value>
  </data>
  <data name="StringLengthErrorMessage" xml:space="preserve">
    <value>Trường {0} phải dài ít nhất {2} ký tự và tối đa {1} ký tự</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Tên tài khoản</value>
  </data>
  <data name="UsernameExistedError" xml:space="preserve">
    <value>Tên đăng nhập đã tồn tại</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Xem</value>
  </data>
</root>